@page "/"
@inject HttpClient Http
@inject IJSRuntime JS
@using OpenCvSharp
@* @using SixLabors.ImageSharp
    @using SixLabors.ImageSharp.Processing
    @using SixLabors.ImageSharp.PixelFormats *@

<PageTitle>Index</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Hello, world!</MudText>
<MudText Class="mb-8">Welcome to your new app, powered by MudBlazor!</MudText>
<MudAlert Severity="Severity.Normal">You can find documentation and examples on our website here: <MudLink
        Href="https://mudblazor.com" Typo="Typo.body2" Color="MudBlazor.Color.Inherit"><b>www.mudblazor.com</b>
    </MudLink>
</MudAlert>

<div class="row">
    <button class="btn btn-success" @onclick="ClickMe">
        Click me
    </button>
    <button class="btn btn-success" @onclick="ClickMe">
        Click me
    </button>

</div>


@code
{
    private async Task ClickMe()
    {
        // await JS.InvokeVoidAsync("alert", "Hello from C#!");
        Stream imageStream = await Http.GetStreamAsync("images/dog.png");
        Console.WriteLine("Sucessfully loaded image");

        var inputArray = new float[1, 3, 224, 224];
        // var resized = input.Resize(new OpenCvSharp.Size(224, 224));

        Console.WriteLine("Sucessfully converted image to array");

        float[] probs = await JS.InvokeAsync<float[]>("runOnnxRunTime", inputArray);

        Console.WriteLine(probs);
    }
}